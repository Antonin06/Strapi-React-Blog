{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFecth = uri => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    return () => {\n      const fetchData = async () => {\n        setLoading(true);\n\n        try {\n          const res = await fetch(url);\n          const json = await res.json();\n          setData(json);\n          setLoading(false);\n        } catch (error) {\n          setError(error);\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    };\n  }, [url]);\n  return {\n    loading,\n    error,\n    data\n  };\n};\n\n_s(useFecth, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n\nexport default useFecth;","map":{"version":3,"sources":["C:/laragon/www/Strapi-React/frontend/src/hooks/useFecth.js"],"names":["useEffect","useState","useFecth","uri","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","url","json"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,WAAO,MAAM;AAEZ,YAAMU,SAAS,GAAG,YAAY;AAC7BD,QAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,YAAI;AAEH,gBAAME,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAD,CAAvB;AACA,gBAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAnB;AAEAT,UAAAA,OAAO,CAACS,IAAD,CAAP;AACAL,UAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,SARD,CAQE,OAAOH,KAAP,EAAc;AAEfC,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,UAAAA,UAAU,CAAC,KAAD,CAAV;AAEA;AACD,OAjBD;;AAkBAC,MAAAA,SAAS;AACT,KArBD;AAsBA,GAvBQ,EAuBN,CAACG,GAAD,CAvBM,CAAT;AA0BA,SAAO;AAAEL,IAAAA,OAAF;AAAWF,IAAAA,KAAX;AAAkBF,IAAAA;AAAlB,GAAP;AACA,CAhCD;;GAAMF,Q;;AAkCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useFecth = (uri) => {\r\n\tconst [data, setData] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\r\n\t\t\tconst fetchData = async () => {\r\n\t\t\t\tsetLoading(true);\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tconst res = await fetch(url)\r\n\t\t\t\t\tconst json = await res.json();\r\n\r\n\t\t\t\t\tsetData(json);\r\n\t\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\t} catch (error) {\r\n\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchData();\r\n\t\t};\r\n\t}, [url]);\r\n\r\n\r\n\treturn { loading, error, data };\r\n}\r\n\r\nexport default useFecth;\r\n"]},"metadata":{},"sourceType":"module"}