[{"C:\\laragon\\www\\Strapi-React\\frontend\\src\\index.js":"1","C:\\laragon\\www\\Strapi-React\\frontend\\src\\App.js":"2","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Homepage.js":"3","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\PostDetails.js":"4","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Category.js":"5","C:\\laragon\\www\\Strapi-React\\frontend\\src\\components\\SiteHeader.js":"6","C:\\laragon\\www\\Strapi-React\\frontend\\src\\components\\Footer.js":"7","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Blog.js":"8"},{"size":197,"mtime":1629557204702,"results":"9","hashOfConfig":"10"},{"size":1466,"mtime":1629628768927,"results":"11","hashOfConfig":"10"},{"size":2139,"mtime":1629586470064,"results":"12","hashOfConfig":"10"},{"size":756,"mtime":1629579322782,"results":"13","hashOfConfig":"10"},{"size":934,"mtime":1629579322777,"results":"14","hashOfConfig":"10"},{"size":2534,"mtime":1629626271508,"results":"15","hashOfConfig":"10"},{"size":1456,"mtime":1629626746906,"results":"16","hashOfConfig":"10"},{"size":1601,"mtime":1629634503751,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sbx4fr",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\laragon\\www\\Strapi-React\\frontend\\src\\index.js",[],["38","39"],"C:\\laragon\\www\\Strapi-React\\frontend\\src\\App.js",[],"C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Homepage.js",["40"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst POSTS = gql`\r\n\tquery GetPosts {\r\n\t\tposts (sort: \"created_at:desc\") {\r\n\t\t\ttitle,\r\n\t\t\tpostContent,\r\n\t\t\tid,\r\n\t\t\tthumbnail {\r\n\t\t\t\turl\r\n\t\t\t}\r\n\t\t},\r\n\t\tpages {\r\n      \t\tid,\r\n    \t\ttitle,\r\n      \t\tblocks {\r\n        \t\t... on ComponentBlockHero {\r\n          \t\t\ttexte,\r\n      \t\t\t\tbuttons {\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\thref,\r\n\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\ttarget\r\n\t\t\t\t\t},\r\n\t\t\t\t\timages {\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n        \t\t}\r\n      \t\t}\r\n    \t}\r\n\t}\r\n`\r\n\r\nfunction Homepage() {\r\n\tconst { loading, error, data } = useQuery(POSTS)\r\n\r\n\tif (loading) return <p>Loading...</p>\r\n\tif (error) return <p>Error :(</p>\r\n\tconsole.log(data)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<section>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-4\">\r\n\t\t\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"first\">\r\n\t\t\t\t\t\t\t\t{data.pages[0].blocks[0].images.map(image => (\r\n\t\t\t\t\t\t\t\t\t<img key={image.id} src={`http://localhost:1337${image.url}`} className=\"img-fluid\"/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"second\">\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-8\">\r\n\t\t\t\t\t\t<h1>{data.pages[0].blocks[0].texte}</h1>\r\n\t\t\t\t\t\t{data.pages[0].blocks[0].buttons.map(button => (\r\n\t\t\t\t\t\t\t<Link key={button.id} to={`${button.href}`} target={`${button.target}`}>{button.label}</Link>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section className=\"\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<h2>Nos Derniers Articles</h2>\r\n\t\t\t\t\t{data.posts.map(post => (\r\n\t\t\t\t\t\t<div key={post.id} className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<img src={`http://localhost:1337${post.thumbnail.url}`} className=\"card-img-top\" alt=\"...\"/>\r\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">{post.title}</h5>\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">{post.postContent}</p>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/blog/${post.id}`}>Lire plus</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Homepage;\r\n","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\PostDetails.js",["41"],"import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst POST = gql`\r\n\tquery GetPosts($id: ID!) {\r\n\t\tpost(id: $id) {\r\n\t\t\ttitle,\r\n\t\t\tpostContent,\r\n\t\t\tid,\r\n\t\t\tcategories {\r\n\t\t\t\tname,\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nfunction PostDetails() {\r\n\tconst { id } = useParams()\r\n\tconst { loading, error, data } = useQuery(POST, {\r\n\t\tvariables : { id : id }\r\n\t})\r\n\r\n\tif (loading) return <p>Loading...</p>\r\n\tif (error) return <p>Error :(</p>\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"review-card\">\r\n\t\t\t<h2>{data.post.title}</h2>\r\n\t\t\t{data.post.categories.map(c => (\r\n\t\t\t\t<small key={c.id}>{c.name}</small>\r\n\t\t\t))}\r\n\t\t\t<p>{data.post.postContent}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PostDetails;\r\n","C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Category.js",["42"],"import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst CATEGORIES = gql`\r\n\tquery Getcategories($id: ID!) {\r\n\t\tcategory(id: $id) {\r\n\t\t\tname,\r\n\t\t\tid,\r\n\t\t\tposts {\r\n\t\t\t\ttitle,\r\n\t\t\t\tpostContent,\r\n\t\t\t\tid,\r\n\t\t\t\tcategories {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nfunction Category() {\r\n\tconst { id } = useParams()\r\n\tconst { loading, error, data } = useQuery(CATEGORIES, {\r\n\t\tvariables : { id : id }\r\n\t})\r\n\r\n\tif (loading) return <p>Loading...</p>\r\n\tif (error) return <p>Error :(</p>\r\n\t// console.log(data)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{data.category.name}</h2>\r\n\t\t\t{data.category.posts.map(post => (\r\n\t\t\t\t<div className=\"review-card\">\r\n\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t{post.categories.map(c => (\r\n\t\t\t\t\t\t<small key={c.id}>{c.name}</small>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<p>{post.postContent}</p>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Category;\r\n","C:\\laragon\\www\\Strapi-React\\frontend\\src\\components\\SiteHeader.js",[],"C:\\laragon\\www\\Strapi-React\\frontend\\src\\components\\Footer.js",[],"C:\\laragon\\www\\Strapi-React\\frontend\\src\\pages\\Blog.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":53,"column":10,"nodeType":"49","endLine":53,"endColumn":95},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]